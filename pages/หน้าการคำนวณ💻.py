import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import sympy as sp

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô false_position ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
def false_position(f, a, b, tol=0.001):
    steps = []
    fa, fb = f(a), f(b)
    
    if np.isclose(fa, fb):
        st.error("f(a) ‡πÅ‡∏•‡∏∞ f(b) ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏®‡∏π‡∏ô‡∏¢‡πå")
        st.stop()
        
    while True:
        c = (a * fb - b * fa) / (fb - fa)
        fc = f(c)
        steps.append((a, b, c, fa, fb, fc))

        if abs(fc) < tol:
            break

        if fa * fc < 0:
            b = c
            fb = fc
        else:
            a = c
            fa = fc
            
        if len(steps) > 100:
             st.warning("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏Å‡∏¥‡∏ô 100 ‡∏£‡∏≠‡∏ö ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡∏π‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü")
             break
             
    return c, steps

st.title("False Position Method (Regula Falsi)")

# ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
st.markdown(
    """
    <div style="border:2px solid #4CAF50; padding:12px; border-radius:8px; background-color:#f9f9f9">
        <b>‚ö† ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏°‡∏Å‡∏≤‡∏£ ‚ö†</b><br><br>
        - e ‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á x ‚Üí <code>exp(x)</code><br>
        - ‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‚Üí <code>x**2</code> (‡πÄ‡∏ä‡πà‡∏ô x¬≤), <code>x**3</code> (‡πÄ‡∏ä‡πà‡∏ô x¬≥)<br>
        - ‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á (‚àöx) ‚Üí <code>sqrt(x)</code><br>
        - ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà <code>*</code> ‡πÄ‡∏ä‡πà‡∏ô 3x ‚Üí <code>3*x</code><br>
        <br>
        ‚úÖ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: <code>x**3 - x - 2</code>, <code>exp(x) - 3*x</code>, <code>cos(x) - x</code>
    </div>
    """,
    unsafe_allow_html=True
)

# --- üí° ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô "‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ" ---
st.info(
    """
    ### ‚ùó ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ (Limitations)
    1.  **‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô [a, b] ‡∏ó‡∏µ‡πà f(a) ‡πÅ‡∏•‡∏∞ f(b) ‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏Å‡πà‡∏≠‡∏ô** ‡∏ã‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏¢‡∏≤‡∏Å
    2.  **‡∏Å‡∏≤‡∏£‡∏•‡∏π‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏≠‡∏≤‡∏à‡∏ä‡πâ‡∏≤‡∏°‡∏≤‡∏Å** ‡∏´‡∏≤‡∏Å‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡∏™‡∏π‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏£‡∏≤‡∏Å ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏î‡πâ‡∏≤‡∏ô‡πÉ‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏±‡∏ö‡πÄ‡∏•‡∏¢ (One-sided convergence) ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô
    3.  **‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Å‡∏ã‡πâ‡∏≥** (Multiple roots)
    """
)


# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏°‡∏Å‡∏≤‡∏£
user_equation = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô f(x):", value="exp(x) - 3*x")

try:
    x = sp.symbols("x")
    expr = sp.sympify(user_equation)
    f = sp.lambdify(x, expr, "numpy")
except Exception as e:
    st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏°‡∏Å‡∏≤‡∏£: {e}")
    st.stop()

# ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ A ‡πÅ‡∏•‡∏∞ B
a = st.number_input("‡∏Ñ‡πà‡∏≤ A (‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ã‡πâ‡∏≤‡∏¢)", value=0.0)
b = st.number_input("‡∏Ñ‡πà‡∏≤ B (‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Ç‡∏ß‡∏≤)", value=1.0) 

if st.button("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì"):
    # --- üí° ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö a < b ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏≠‡∏∑‡πà‡∏ô ---
    # 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ a ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ b ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if a >= b:
        st.error("‚ùå **‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:** ‡∏Ñ‡πà‡∏≤ A (‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ã‡πâ‡∏≤‡∏¢) ‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤ B (‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Ç‡∏ß‡∏≤)")
    else:
        # 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç f(a) * f(b) < 0
        fa_val = f(a)
        fb_val = f(b)

        if fa_val * fb_val >= 0:
            st.error(f"‚ùå **‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:** f(a) ‡πÅ‡∏•‡∏∞ f(b) ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô")
            st.info(f"‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏∑‡∏≠: f({a}) = {fa_val:.4f} ‡πÅ‡∏•‡∏∞ f({b}) = {fb_val:.4f} (‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô)")
        else:
            # --- ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ---
            try:
                root, steps = false_position(f, a, b, tol=0.001)

                st.success(f"üéâ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì = {root:.6f}")

                # ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
                st.write("### üìù ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì")
                st.table(
                    {
                        "‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà": [i+1 for i in range(len(steps))],
                        "a": [f"{s[0]:.6f}" for s in steps],
                        "b": [f"{s[1]:.6f}" for s in steps],
                        "c (‡∏£‡∏≤‡∏Å)": [f"{s[2]:.6f}" for s in steps],
                        "f(c)": [f"{s[5]:.6f}" for s in steps],
                    }
                )

                # ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü
                st.write("### üìà ‡∏Å‡∏£‡∏≤‡∏ü‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î C")
                x_vals = np.linspace(a - 1, b + 1, 400)
                y_vals = f(x_vals)

                fig, ax = plt.subplots()
                ax.axhline(0, color="gray", linewidth=0.8, linestyle='--')
                ax.axvline(0, color="gray", linewidth=0.8, linestyle='--')
                ax.plot(x_vals, y_vals, label=f"f(x) = {user_equation}")
                
                # --- üí° ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô "ro-" ‡πÄ‡∏õ‡πá‡∏ô "ro" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° ---
                ax.plot([s[2] for s in steps], [s[5] for s in steps], "ro", label="‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏Å (c) ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö")
                
                ax.plot(root, f(root), 'g*', markersize=10, label=f"‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ ‚âà {root:.4f}")
                ax.set_xlabel("x")
                ax.set_ylabel("f(x)")
                ax.grid(True, which='both', linestyle='--', linewidth=0.5)
                ax.legend()
                st.pyplot(fig)

            except Exception as e:
                st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì: {e}")