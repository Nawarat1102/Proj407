import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import sympy as sp

def false_position(f, a, b, tol=0.001):
    steps = []
    while True:
        fa, fb = f(a), f(b)
        c = a - (b - a) * fa / (fb - fa)
        fc = f(c)

        steps.append((a, b, c, fa, fb, fc))

        if abs(fc) < tol:
            break

        if fa * fc < 0:
            b = c
        else:
            a = c
    return c, steps

import streamlit as st


st.title("False Position Method (Regula Falsi)")

# ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö
st.markdown(
    """
    <div style="border:2px solid #4CAF50; padding:12px; border-radius:8px; background-color:#f9f9f9">
        <b>‚ö† ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏°‡∏Å‡∏≤‡∏£ ‚ö†</b><br><br>
        - e ‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á x ‚Üí <code>exp(x)</code><br>
        - ‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‚Üí <code>x**2</code> (‡πÄ‡∏ä‡πà‡∏ô x¬≤), <code>x**3</code> (‡πÄ‡∏ä‡πà‡∏ô x¬≥)<br>
        - ‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á (‚àöx) ‚Üí <code>sqrt(x)</code><br>
        - ‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‚Üí <code>x**(1/3)</code><br>
        - ‡∏•‡∏≠‡∏Å‡∏≤‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ (ln) ‚Üí <code>log(x)</code><br>
        - ‡∏•‡∏≠‡∏Å‡∏≤‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ê‡∏≤‡∏ô 10 ‚Üí <code>log(x, 10)</code><br>
        - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì ‚Üí <code>sin(x)</code>, <code>cos(x)</code>, <code>tan(x)</code><br>
        - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì‡∏ú‡∏Å‡∏ú‡∏±‡∏ô ‚Üí <code>asin(x)</code>, <code>acos(x)</code>, <code>atan(x)</code><br>
        - ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ‚Üí œÄ = <code>pi</code>, e = <code>E</code><br>
        - ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà <code>*</code> ‡πÄ‡∏ä‡πà‡∏ô 3x ‚Üí <code>3*x</code><br>
        <br>
        ‚úÖ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: <code>(x**3) - (x**2) - 0.1</code>, <code>exp(x) - 3*x</code>, <code>sin(x) - x/2</code>
    </div>
    """,
    unsafe_allow_html=True
)

# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏°‡∏Å‡∏≤‡∏£
user_equation = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô f(x):", value="exp(x) - 3*x")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
x = sp.symbols("x")
try:
    expr = sp.sympify(user_equation)  # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏Å‡∏≤‡∏£ Sympy
    f = sp.lambdify(x, expr, "numpy") # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Python
except Exception as e:
    st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏°‡∏Å‡∏≤‡∏£: {e}")
    st.info(
        """
        üîé ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏°‡∏Å‡∏≤‡∏£:
        - ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÉ‡∏™‡πà * ‡πÄ‡∏ä‡πà‡∏ô `3*x` ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà `3x`  
        - ‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ `**` ‡πÄ‡∏ä‡πà‡∏ô `x**2`  
        - ‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡πÉ‡∏ä‡πâ `sqrt(x)`  
        - ‡∏•‡∏≠‡∏Å‡∏≤‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡πÉ‡∏ä‡πâ `log(x)`  
        - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì: `sin(x)`, `cos(x)`  
        """
    )
    st.stop()


# ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ A ‡πÅ‡∏•‡∏∞ B
a = st.number_input("‡∏Ñ‡πà‡∏≤ A (‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ã‡πâ‡∏≤‡∏¢)", value=0.00)
b = st.number_input("‡∏Ñ‡πà‡∏≤ B (‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏ß‡∏≤)", value=0.00)

if st.button("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì"):
    root, steps = false_position(f, a, b, tol=0.001)

    st.success(f"‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì = {root:.4f}")

    # ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    st.write("### ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì")
    st.table(
        {
            "A": [f"{s[0]:.6f}" for s in steps],
            "B": [f"{s[1]:.6f}" for s in steps],
            "C": [f"{s[2]:.6f}" for s in steps],
            "f(A)": [f"{s[3]:.6f}" for s in steps],
            "f(B)": [f"{s[4]:.6f}" for s in steps],
            "f(C)": [f"{s[5]:.6f}" for s in steps],
        }
    )

    # ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü
    st.write("### ‡∏Å‡∏£‡∏≤‡∏ü‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î C")
    x_vals = np.linspace(a-1, b+1, 400)
    y_vals = f(x_vals)

    fig, ax = plt.subplots()
    ax.axhline(0, color="black", linewidth=1)
    ax.plot(x_vals, y_vals, label="f(x)")
    ax.plot([s[2] for s in steps], [s[5] for s in steps], "ro-", label="C (‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏Å)")
    ax.set_xlabel("x")
    ax.set_ylabel("f(x)")
    ax.legend()
    st.pyplot(fig)
