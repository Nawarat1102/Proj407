import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# -------------------------------
# False Position Method function
# -------------------------------
def false_position(func, x0, x1, tol=1e-6, max_iter=100):
    if func(x0) * func(x1) >= 0:
        raise ValueError("f(x0) ‡πÅ‡∏•‡∏∞ f(x1) ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô")

    for i in range(max_iter):
        # ‡∏™‡∏π‡∏ï‡∏£ Regula Falsi
        x2 = (x0 * func(x1) - x1 * func(x0)) / (func(x1) - func(x0))
        f2 = func(x2)

        if abs(f2) < tol:
            return x2, i+1
        elif func(x0) * f2 < 0:
            x1 = x2
        else:
            x0 = x2

    return x2, max_iter

# -------------------------------
# Streamlit UI
# -------------------------------
st.title("üßÆ False Position Method (Regula Falsi)")

# Input ‡∏™‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
func_str = st.text_input("‡πÉ‡∏™‡πà‡∏™‡∏°‡∏Å‡∏≤‡∏£ f(x):", "x**3 - x - 2")
x0 = st.number_input("‡∏Ñ‡πà‡∏≤ x0:", value=1.0)
x1 = st.number_input("‡∏Ñ‡πà‡∏≤ x1:", value=2.0)
tol = st.number_input("Tolerance:", value=1e-6, format="%.1e")
max_iter = st.number_input("Max Iterations:", value=50, step=1)

# ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
if st.button("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì"):
    try:
        func = lambda x: eval(func_str, {"x": x, "np": np})
        root, iters = false_position(func, x0, x1, tol, max_iter)

        st.success(f"‚úÖ ‡∏£‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì = {root:.6f} ‡πÉ‡∏ô {iters} iterations")

        # ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü
        xs = np.linspace(min(x0, x1) - 2, max(x0, x1) + 2, 400)
        ys = [func(x) for x in xs]

        fig, ax = plt.subplots()
        ax.axhline(0, color="black", linewidth=1)
        ax.plot(xs, ys, label="f(x)")
        ax.plot(root, func(root), "ro", label="Root")
        ax.set_xlabel("x")
        ax.set_ylabel("f(x)")
        ax.legend()
        st.pyplot(fig)

    except Exception as e:
        st.error(f"‚ö†Ô∏è Error: {e}")
